- name: link dotfiles
  file:
    src: "{{ ansible_env.PWD }}/roles/shell/files/{{ item.src }}"
    dest: "{{ home_dir }}/{{ item.dest }}"
    state: link
  with_items:
    - dest: .tigrc
      src: tigrc
    - dest: .gitattributes
      src: gitattributes
    - dest: .gitcommit
      src: gitcommit
    - dest: .gitconfig
      src: gitconfig
    - dest: .gitignore
      src: gitignore

- name: link alacritty configuration
  file:
    src: '{{ ansible_env.PWD }}/roles/shell/files/alacritty'
    dest: '{{ home_dir }}/.config/alacritty'
    state: link

- include: zsh.yml
  when: os_family == 'darwin'
  vars:
    - executable: /usr/local/bin/zsh

- include: zsh.yml
  when: os_family == 'debian'
  vars:
    - executable: /usr/bin/zsh

- name: Check if ~/.oh-my-zsh exists
  stat:
    path: ~/.oh-my-zsh
  register: ohmyzsh

- name: Install Oh My Zsh
  shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  when: not ohmyzsh.stat.exists

- name: Ensure ZSH contains $ZSH_CUSTOM
  ansible.builtin.lineinfile:
    insertbefore: BOF
    create: yes
    path: ~/.zshrc
    regexp: '^export ZSH_CUSTOM='
    line: export ZSH_CUSTOM="$DOTFILES/roles/shell/files/zsh"

- name: Ensure ZSH contains $DOTFILES
  ansible.builtin.lineinfile:
    insertbefore: BOF
    create: yes
    path: ~/.zshrc
    regexp: '^export DOTFILES='
    line: export DOTFILES={{playbook_dir}}
